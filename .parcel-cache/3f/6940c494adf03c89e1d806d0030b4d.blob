var helpers = require("../../../../../../AppData/Roaming/npm/node_modules/parcel/node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);
try {
  var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
  _parcelHelpers.defineInteropFlag(exports);
  _parcelHelpers.export(exports, "MainView", function () {
    return MainView;
  });
  var _react = require('react');
  var _reactDefault = _parcelHelpers.interopDefault(_react);
  var _movieCardMovieCard = require('../movie-card/movie-card');
  var _movieViewMovieView = require('../movie-view/MovieView');
  var _jsxFileName = "C:\\Users\\anps8\\Documents\\careerfoundry\\myFlix-client\\src\\components\\main-view\\main-view.jsx";
  class MainView extends _reactDefault.default.Component {
    constructor() {
      super();
      // initializes your component’s state, and without it, you’ll get an error if you try to use this.state inside constructor()
      this.state = {
        // this is the component statement(variable)??????
        movies: [{
          _id: 1,
          Title: 'Redneck Zombies',
          Description: 'A barrel of radioactive waste is lost out in the woods. Some demented rednecks find it and use it as part of their still. Everybody who drinks the liquor they produced turns into zombies. ',
          ImagePath: 'https://www.imdb.com/title/tt0093833/mediaviewer/rm1923278592?ref_=tt_ov_i'
        }, {
          _id: 2,
          Title: 'Zoombies',
          Description: 'When a strange virus quickly spreads through a safari park and turns all the zoo animals undead, those left in the park must stop the creatures before they escape and zombify the whole city. ',
          ImagePath: 'https://www.imdb.com/title/tt5340882/mediaviewer/rm1387665408?ref_=tt_ov_i'
        }, {
          _id: 3,
          Title: 'Zombiber',
          Description: 'A fun weekend turns into madness and horror for a bunch of groupies looking for fun in a beaver infested swamp. ',
          ImagePath: '"https://www.imdb.com/title/tt2784512/mediaviewer/rm4129412096?ref_=tt_ov_i"'
        }],
        selectedMovie: null
      };
    }
    setSelectMovie(newSelectedMovie) {
      this.setState({
        selectedMovie: newSelectedMovie
      });
    }
    render() {
      // const movies = this.state.movies; /////// instead of this expression we use the "object destruction"
      const {movies, selectedMovie} = this.state;
      // What is the object destruction? I did not understand
      // if (selectedMovie) return <MovieView movie={selectedMovie}/>
      if (movies.length === 0) return (
        /*#__PURE__*/_reactDefault.default.createElement("div", {
          className: "main-view",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 33,
            columnNumber: 41
          }
        }, "The list is empty!")
      );
      return (
        /*#__PURE__*/_reactDefault.default.createElement("div", {
          className: "main-view",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 36,
            columnNumber: 13
          }
        }, selectedMovie ? /*#__PURE__*/_reactDefault.default.createElement(_movieViewMovieView.MovieView, {
          movie: selectedMovie,
          onBackClick: newSelectedMovie => {
            this.setSelectMovie(newSelectedMovie);
          },
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 38,
            columnNumber: 23
          }
        }) : movies.map(movie => /*#__PURE__*/_reactDefault.default.createElement(_movieCardMovieCard.MovieCard, {
          key: movie._id,
          movieData: movie,
          onMovieClick: movie => {
            this.setSelectMovie(movie);
          },
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 40,
            columnNumber: 43
          }
        })))
      );
    }
  }
  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
